ext {
  artifactId = 'selenide-appium'
}

dependencies {
  api project(":statics")
  testImplementation project(':statics').sourceSets.test.output
  testImplementation project(':modules:core').sourceSets.test.output

  api("io.appium:java-client:9.4.0") {
    exclude group: 'io.opentelemetry'
    exclude group: 'org.slf4j'
    exclude group: 'org.seleniumhq'
    exclude group: 'cglib'
  }
  implementation('commons-io:commons-io:2.18.0')
  testImplementation("org.junit.jupiter:junit-jupiter")
  testImplementation("org.junit.jupiter:junit-jupiter-params")
  testImplementation("org.assertj:assertj-core:$assertjVersion")
  testImplementation("org.mockito:mockito-core:$mockitoVersion")
  testRuntimeOnly("org.slf4j:slf4j-simple:$slf4jVersion")
}

tasks.register('android', Test) {
  include 'it/mobile/android/**/*'
  exclude 'com/codeborne/selenide/**/*'
  outputs.upToDateWhen { false }
  maxParallelForks = 1
}

tasks.register('ios', Test) {
  include 'it/mobile/ios/**/*'
  exclude 'com/codeborne/selenide/**/*'
  outputs.upToDateWhen { false }
  maxParallelForks = 1
}

tasks.withType(Test).configureEach {
  useJUnitPlatform()
  System.properties.stringPropertyNames()
    .findAll { it.startsWith("selenide.") }
    .forEach {
      systemProperties[it] = System.getProperty(it)
    }
}

apply from: rootProject.file('gradle/publish-module.gradle')
